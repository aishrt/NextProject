"use client";
import React, { useState } from "react";
import { Metadata } from "next";
import "../../../expert/expert.css";
import { Button } from "@/components/Form/Button";
import Dialog from "@mui/material/Dialog";
import { DialogActions, DialogContent, DialogTitle, IconButton } from "@mui/material";
import useMediaQuery from "@mui/material/useMediaQuery";
import theme from "@/theme";
import Form from "@/components/Form/Form";
import { InputField } from "@/components/Form/InputField";
import { useHookForm } from "@/hooks/useHookForm";
import { z } from "zod";
import DateField from "@/components/Form/DateField";
import SelectField from "@/components/Form/SelectField";
import TextAreaField from "@/components/Form/TextArea";
import CloseIcon from '@mui/icons-material/Close';

export const metadata: Metadata = {
  title: "Task Assigned",
  description: "Generated by create next app",
};
const options = [
  { label: "Category", value: "Category" },
  { label: "Category 2", value: "Category 2" },
];
type FormValues = {
  case_id: string;
  category: string;
  case_type: string;
  name: string;
  doc_name: string;
  lawyer: string;
  task_title: string;
  date: string;
  describe: string;
  assigned_person: string;
};
const schema = z.object({
  referId: ((msg) => z.string({ required_error: msg }).min(1, msg))(
    "Please enter Reference ID"
  ),

  date: ((msg) => z.string({ required_error: msg }).min(1, msg))(
    "Please enter date"
  ),

  name: ((msg) => z.string({ required_error: msg }).min(1, msg))(
    "Please select the name"
  ),
  lawyer: ((msg) => z.string({ required_error: msg }).min(1, msg))(
    "Please select the lawyer"
  ),
});
export default function AddTask() {
  const [open, setOpen] = React.useState(false);
  const fullScreen = useMediaQuery(theme.breakpoints.down("md"));
  const handleClickOpen = () => {
    setOpen(true);
  };
  const { methods, setValues } = useHookForm<FormValues, typeof schema>(schema);

  const { formState, control } = methods;

  const handleClose = () => {
    setOpen(false);
  };

  return (
    <div className="add-task">
      <div className="top-br d-flex justify-content-between align-items-center">
        <h2 className="f-24 pb-3">Task Assigned</h2>
        <Button
          variant="contained"
          className="expert-btn"
          onClick={handleClickOpen}
        >
          Add Task
        </Button>
      </div>

      <Dialog
        fullScreen={fullScreen}
        open={open}
        onClose={handleClose}
        className="add-task-form"
        aria-labelledby="responsive-dialog-title"
      >
        <DialogTitle id="responsive-dialog-title" className="justify-content-center text-center f-24">Add Task

        <IconButton
          aria-label="close"
          onClick={handleClose}
          sx={(theme) => ({
            position: 'absolute',
            right: 8,
            top: 8,
            color: theme.palette.grey[500],
          })}
        >
          <CloseIcon />
        </IconButton>
        </DialogTitle>
        <DialogContent>
          <Form<FormValues>
            onSubmit={async (values) => {
              alert("Abc");
            }}
            methods={methods}
          >
            <div className="row mt-4 add-task-form">
              <div className="col-12 col-md-12">
                <div className="row">
                  <div className="col-12 col-md-12 mb-1">
                    <div className="task-input">
                      <InputField
                        type="text"
                        error={formState.errors["category"]}
                        label="Case Category"
                        placeholder="Case Category"
                        name="category"
                        variant="filled"
                        className="filter-ip"
                        control={control}
                      />
                    </div>
                  </div>
                  <div className="col-12 col-md-12 mb-1">
                    <div className="task-input">
                      <InputField
                        type="text"
                        error={formState.errors["case_id"]}
                        label="Case ID"
                        placeholder="Case ID"
                        name="case_id"
                        variant="filled"
                        className="filter-ip"
                        control={control}
                      />
                    </div>
                  </div>
                  <div className="col-12 col-md-12 mb-1">
                    <div className="task-input">
                      <InputField
                        type="text"
                        error={formState.errors["case_type"]}
                        label="Case Type"
                        placeholder="Case Type"
                        name="case_type"
                        variant="filled"
                        className="filter-ip"
                        control={control}
                      />
                    </div>
                  </div>
                  <div className="col-12 col-md-12 mb-1">
                    <div className="task-input">
                      <InputField
                        type="text"
                        error={formState.errors["doc_name"]}
                        label="Document Name"
                        placeholder="Document Name"
                        name="doc_name"
                        variant="filled"
                        className="filter-ip"
                        control={control}
                      />
                    </div>
                  </div>
                  <div className="col-12 col-md-12 mb-1">
                    <div className="task-input">
                      <InputField
                        type="text"
                        error={formState.errors["task_title"]}
                        label="Task Title"
                        placeholder="Task Title"
                        name="task_title"
                        variant="filled"
                        className="filter-ip"
                        control={control}
                      />
                    </div>
                  </div>
                  <div className="col-12 col-md-12 mb-1">
                    <div className="task-input">
                      <TextAreaField
                        name="describe"
                        label="Description"
                        placeholder="Description"
                        error={formState.errors["describe"]}
                        control={control}
                        variant="filled"
                        className="input-fill-gray w-100 border-0"
                      />
                    </div>
                  </div>
                  <div className="col-12 col-md-12 mb-3">
                    <div className="task-input date">
                      <label>Last Submission Date</label>
                      <DateField
                        error={formState.errors["date"]}
                        label="Last Submission Date"
                        name="date"
                        variant="filled"
                        className="filter-ip"
                        control={control}
                      />
                    </div>
                  </div>
                  <div className="col-12 col-md-12 mb-3">
                    <div className="task-input date">
                      <label>Valid Till</label>
                      <DateField
                        error={formState.errors["date"]}
                        label="Valid Till"
                        name="date"
                        variant="filled"
                        className="filter-ip"
                        control={control}
                      />
                    </div>
                  </div>
                  <div className="col-12 col-md-12 mb-1">
                    <div className="task-input">
                      <InputField
                        type="text"
                        error={formState.errors["assigned_person"]}
                        label="Assigned Person"
                        placeholder="Assigned Person"
                        name="assigned_person"
                        variant="filled"
                        className="filter-ip"
                        control={control}
                      />
                    </div>
                  </div>

                  <div className="col-12 col-md-12">
                    <div className="filter-btn text-center">
                      <Button
                        variant="contained"
                        size="lg"
                        className="expert-btn"
                      >
                        <span className="f-16">Add Task</span>
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </Form>
        </DialogContent>
      </Dialog>
    </div>
  );
}
