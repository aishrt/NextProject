"use client";
import React, { useEffect, useState } from "react";
import { Metadata } from "next";
import "../../expert/expert.css";
import place from "@/assets/placeholder.png";
import Image from "next/image";
import { Button } from "@/components/Form/Button";
import { axios } from "@/utils/axios";
import { useRouter, useSearchParams } from "next/navigation";
import ConfirmationDialog from "@/components/Form/ConfirmationDialogue";

export const metadata: Metadata = {
  title: "Litigation Lawyers List",
  description: "Generated by create next app",
};

export default function TableAssign() {
  const [activeLawyerId, setActiveLawyerId] = useState<string | null>(null);
  const search = useSearchParams();
  const router = useRouter();
  const [loading, setLoading] = useState(false);
  const [openDialog, setOpenDialog] = useState(false);
  const [listData, setListData] = useState([]);
  const case_id = search?.get("case_id");
  const lawyersList = [
    {
      id: "#2544664412",
      fullName: "Alec M. Thompson",
      legalExpertise: "Family(Divorce)",
      experience: "5 years",
    },
    {
      id: "#2544664413",
      fullName: "Jane D. Doe",
      legalExpertise: "Corporate Law",
      experience: "7 years",
    },
  ];
  const AssignLawyer = (id: any) => {
    setLoading(true);
    axios
      .post("/api/case/assign", { case_id: case_id, lawyer_id: id })
      .then((res: any) => {
        setLoading(false);
        setOpenDialog(false);
        router.back();
      });
  };
  const handleCardClick = (lawyerId: string) => {
    setActiveLawyerId(lawyerId);
    setOpenDialog(true);
    // if (window.confirm("Do you want to assign this Lawyer")) {
    //   AssignLawyer(lawyerId);
    // }
  };

  const GetLawyers = () => {
    axios.get(`/api/lawyer/list`).then((res: any) => {
      setListData(res);
    });
  };
  useEffect(() => {
    GetLawyers();
  }, []);
  return (
    <div className="liti-lawyers-list">
      <ConfirmationDialog
        open={openDialog}
        title="Lawyer Assign Confirmation"
        message="Are you sure you want to assign this Lawyer? This action cannot be undone."
        loading={loading}
        onConfirm={() => {
          AssignLawyer(activeLawyerId);
        }}
        onCancel={() => setOpenDialog(false)}
      />
      <div className="row">
        {listData?.map((lawyer: any) => (
          <div key={lawyer._id} className="col-12 col-md-6 mb-4">
            <div
              className={`white-card litigate-lawyer p-4 ${
                activeLawyerId === lawyer.id ? "active" : ""
              }`}
              // onClick={() => handleCardClick(lawyer._id)}
            >
              <div className="row w-100 m-auto">
                <div className="col-12 col-md-4 col-lg-3">
                  <Image src={place} className="lawyers-icon-case" alt="" />
                </div>
                <div className="col-12 col-md-8 col-lg-9">
                  <div className="bggray litigation-lawyer-box rounded p-4">
                    <div className="liti-lawyer-flex d-flex justify-content-between ">
                      <span className="f-14 semi-bold">Lawyer Id:</span>
                      <span className="f-14">#{lawyer._id?.substr(0, 8)}</span>
                    </div>
                    <div className="liti-lawyer-flex d-flex justify-content-between ">
                      <span className="f-14 semi-bold">Full Name:</span>
                      <span className="f-14">{lawyer.name}</span>
                    </div>
                    <div className="liti-lawyer-flex d-flex justify-content-between ">
                      <span className="f-14 semi-bold">Legal Expertise:</span>
                      <span className="f-14">
                        {lawyer.legalExpertise?.map((itm: any) => {
                          return `${itm?.name || "--"} `;
                        })}
                      </span>
                    </div>
                    <div className="liti-lawyer-flex d-flex justify-content-between ">
                      <span className="f-14 semi-bold">Expertise:</span>
                      <span className="f-14">
                        {lawyer.experience || "5 years"}
                      </span>
                    </div>
                  </div>
                  <div className="lawyer-btns mt-4 d-flex gap-3 align-items-center">
                    <Button
                      onClick={() => handleCardClick(lawyer._id)}
                      variant="contained"
                      className="expert-btn"
                    >
                      Assign
                    </Button>
                    <Button variant="outline" className="expert-line-btn">
                      View More
                    </Button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}
