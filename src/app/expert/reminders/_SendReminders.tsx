"use client";
import React, { useState } from "react";
import { Metadata } from "next";
import "../../expert/expert.css";
import {
  
  Checkbox,
  FormControl,
  FormControlLabel,
  FormLabel,
  Radio,
  RadioGroup,
  Switch,
} from "@mui/material";
import { InputField } from "@/components/Form/InputField";
import Form from "@/components/Form/Form";
import DateField from "@/components/Form/DateField";
import TextAreaField from "@/components/Form/TextArea";
import { z } from "zod";
import { useHookForm } from "@/hooks/useHookForm";
import SelectField from "@/components/Form/SelectField";
import { Button } from "@/components/Form/Button";

type FormValues = {
  to: string;
  doc_type: string;
  folder_id: string;
  date: string;
  days: string;
  describe: string;
  reminder: string;
  upload_doc: string;
  repeat: string;
  time: string;
  subject: string;
};

const schema = z.object({
  doc_name: ((msg) => z.string({ required_error: msg }).min(1, msg))(
    "Please enter Document Name"
  ),

  date: ((msg) => z.string({ required_error: msg }).min(1, msg))(
    "Please enter date"
  ),

  name: ((msg) => z.string({ required_error: msg }).min(1, msg))(
    "Please select the name"
  ),
  lawyer: ((msg) => z.string({ required_error: msg }).min(1, msg))(
    "Please select the lawyer"
  ),
});
export const metadata: Metadata = {
  title: "Send Reminders",
  description: "Generated by create next app",
};

export default function SendReminders() {
  const { methods, setValues } = useHookForm<FormValues, typeof schema>(schema);
  const label = { inputProps: { "aria-label": "Switch demo" } };
  const { formState, control } = methods;

  const options = [
    { label: "Name", value: "Name" },
    { label: "Name", value: "Name" },
  ];
  return (
    <div className="send-reminders">
      <Form<FormValues>
        onSubmit={async (values: any) => {
          alert("Abc");
        }}
        methods={methods}
      >
        <div className="row mt-4">
          <div className="col-12 col-md-5 border-right">
            <div className="row">
              <div className="col-12 col-md-12 mb-3">
                <div className="reminder-input">
                  <FormControl>
                    <RadioGroup
                      row
                      aria-labelledby="demo-row-radio-buttons-group-label"
                      name="row-radio-buttons-group"
                    >
                      <FormControlLabel
                        value="enabled"
                        control={<Radio />}
                        label="Enabled"
                      />
                      <FormControlLabel
                        value="Disabled"
                        control={<Radio />}
                        label="Disabled"
                      />
                    </RadioGroup>
                  </FormControl>
                </div>
              </div>
              <div className="col-12 col-md-12 mb-3">
                <div className="reminder-input date">
                  <label>Date</label>
                  <DateField
                    error={formState.errors["date"]}
                    label="Date"
                    name="date"
                    variant="filled"
                    className="filter-ip bg-white"
                    control={control}
                  />
                </div>
              </div>
              <div className="col-12 col-md-12 mb-3">
                <div className="request-input time">
                  <InputField
                    type="time"
                    error={formState.errors["time"]}
                    label="Time"
                    placeholder="Time"
                    name="time"
                    variant="filled"
                    className="filter-ip"
                    control={control}
                  />
                </div>
              </div>
              <div className="col-12 col-md-12 mb-3">
                <div className="request-input repreat-col d-flex gap-2 align-items-center justify-content-between">
                  <InputField
                    type="text"
                    error={formState.errors["repeat"]}
                    label="Repeat Every"
                    placeholder="Document type"
                    name="repeat"
                    variant="filled"
                    className="filter-ip"
                    control={control}
                  />
                  <div>
                    <select className="repeat-selec">
                      <option>Days</option>
                      <option>2 Days</option>
                      <option>3 Days</option>
                    </select>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div className="col-12 col-md-5">
            <div className="row">
              <div className="col-12 col-md-12 mb-3 reminder-select">
                <h4 className="f-18 semi-bold pb-3">Notifications</h4>
                <label>To</label>
                <SelectField
                  options={options}
                  label="To"
                  name="to"
                  className="filter-select"
                  error={formState.errors["to"]}
                  control={control}
                />
              </div>

              <div className="col-12 col-md-12 mb-3">
                <div className="request-input">
                  <InputField
                    type="text"
                    error={formState.errors["subject"]}
                    label="Subject"
                    placeholder="Subject"
                    name="subject"
                    variant="filled"
                    className="filter-ip"
                    control={control}
                  />
                </div>
              </div>
              <div className="col-12 col-md-12 mb-3">
                <div className="filter-input text-left">
                  <TextAreaField
                    name="describe"
                    placeholder="Description"
                    label="Description"
                    error={formState.errors["describe"]}
                    control={control}
                    variant="filled"
                    className="bg-desc bg-white w-100 border-0"
                  />
                </div>
              </div>
              <div className="col-12 col-md-12 mb-3">
                <div className="request-input repreat-col d-flex gap-2 align-items-center justify-content-between">
                  <span className="f-18 semi-bold">Send Copy to Email</span>
                  <div>
                    <FormControlLabel
                      className="gray f-13"
                      control={<Checkbox defaultChecked />}
                      label="Send external email in addition to an internal Omni CMS message"
                    />
                  </div>
                </div>
               
              </div>
            </div>
          </div>
          <div className="col-12 col-md-12 mb-3">
                  <div className="form-buttons-remind d-flex  gap-3 mt-5">
                    <Button className="expert-btn px-4 py-2" variant="contained">
                      Save
                    </Button>
                    <Button className="cancel-btn px-4 py-2" variant="contained">
                      Cancel
                    </Button>
                  </div>
                </div>
        </div>
      </Form>
    </div>
  );
}
