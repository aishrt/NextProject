import { PaginateData } from "@/types/Paginate";
import { User as UserType } from "@/types/User";
import db from "@/utils/connectDB";
import { Metadata } from "next";
import React from "react";
import TaskTable from "@/app/container/TaskTable";
import "../../../admin/admin.css";
import TaskModel from "@/models/tasks.model";
import TaskDetails from "@/app/container/TaskView";

export const metadata: Metadata = {
  title: "Case Tasks",
  description: "Generated by create next app",
};

export default async function TaskView({
  searchParams,
}: {
  searchParams: { [key: string]: string | string[] | undefined };
}) {
  let page: string | string[] | undefined | number = searchParams?.page;
  // const router = useRouter();
  let task_id: string | string[] | undefined | number = searchParams?.task_id;

  page = !!page ? +page : 1;
  const fetchData = async (
    pageNumber: number
  ): Promise<PaginateData<UserType>> => {
    await db.connectDB();
    const totalUsers = await TaskModel.countDocuments({});
    const totalPages = Math.ceil(totalUsers / 10);
    if (pageNumber > totalPages) {
      pageNumber = totalPages;
    }
    const start = pageNumber - 1;
    const userData = await TaskModel.findOne({ _id: task_id })
      .limit(10)
      .skip(start * 10);
    return {
      data: userData,
      currentPage: pageNumber,
      totalEntries: totalUsers,
    };
  };

  const data: any = await fetchData(page);

  return (
    <div className="main-content expert-cases">
      <TaskDetails data={data} task_id={task_id} role={"expert"} />
    </div>
  );
}
