import Breadcrumb from "@/components/Breadcrumbs";
import ContentWrapper from "@/components/Layout/Admin/ContentWrapper";
import Table from "@/components/Table/Table";
import User from "@/models/user.model";
import { PaginateData } from "@/types/Paginate";
import { User as UserType } from "@/types/User";
import db from "@/utils/connectDB";
import { Metadata } from "next";
import { NextRequest } from "next/server";
import React from "react";

export const metadata: Metadata = {
  title: "Profile",
  description: "Generated by create next app",
};

export default async function Users({
  searchParams,
}: {
  searchParams: { [key: string]: string | string[] | undefined |number};
}) {
  let page = searchParams?.page;
  page = !!page ? page : '1';

  const fetchData = async (pageNumber: number): Promise<PaginateData<UserType>> => {
    await db.connectDB();
    const totalUsers = await User.countDocuments();
    const totalPages :number= Math.ceil(totalUsers / 10);
    if (pageNumber > totalPages) {
        pageNumber = totalPages;
    }
    const start = pageNumber - 1;

    const userData = await User.find()
      .limit(10)
      .skip(start * 10);
    return {
      data: userData,
      currentPage: pageNumber,
      totalEntries: totalUsers,
    };
  };

  const data = await fetchData(+page);

  return (
    <ContentWrapper>
      <Breadcrumb last="Users" />
      <h3 className="mb-3">Users</h3>
      <Table<UserType>
        data={data.data}
        columns={[
          { field: "name", title: "Name" },
          { field: "email", title: "Email" },
        ]}
        currentPage={data.currentPage}
        totalEntries={data.totalEntries}
        clientPagination={false}
      />
    </ContentWrapper>
  );
}
