"use client";

import React, { useState, useEffect } from "react";
import { Metadata } from "next";
import "../../client/client.css";
import { Button } from "@/components/Form/Button";
import { CircularProgress, Link } from "@mui/material";
import arrow from "@/assets/arrow-lg.png";
import mesasge from "@/assets/mail.png";
import task from "@/assets/task.png";
import call from "@/assets/talk.png";
import Image from "next/image";
import pattern from "@/assets/pattrn.png";
import { useSearchParams, useRouter } from "next/navigation";
import axios from "axios";
import { Cases } from "@/types/Cases";
import LoadingButton from "@mui/lab/LoadingButton";
import { useSession } from "next-auth/react";
import moment from "moment";
import { CaseDetails } from "../case-overview/_CaseComponents/CaseDetails";
import { Questioner } from "./_Questioner";

// export const metadata: Metadata = {
//   title: "PreLitigation Cases",
//   description: "Generated by create next app",
// };

export default function Questionnaire() {
  const { data } = useSession();
  const session = data?.user;
  let params = useSearchParams();
  const router = useRouter();
  const id = params ? params.get("id") : null; //  check null or undefined
  const [loading, setLoading] = useState<boolean>(false);

  const [load, setLoad] = useState<boolean>(false);
  const [caseData, setCaseData] = useState<Cases>();

  useEffect(() => {
    const getCaseById = async () => {
      try {
        setLoading(true);
        if (id) {
          const { data } = await axios.get(
            `/api/client/case/get-case?caseId=${id}`
          );
          setCaseData(data?.data);
        }

        setLoading(false);
      } catch (error) {
        console.log("err", error);
        setLoading(false);
      }
    };
    getCaseById();
  }, [id]);
  return (
    <div className="main-content expert-cases details-litigation">
      <div className="top-br text-end">
        <LoadingButton
          loading={load}
          variant="contained"
          className="client-btn f-14 rounded-lg"
          size="large"
          onClick={() => {
            setLoad(true);
            router.back();
          }}
        >
          <span>Go Back</span>
        </LoadingButton>
      </div>
      <div className="pre-case-overview row ">
        <div className="col-12 col-md-12 mt-4">
          <div className="white-card rounded-lg p-4">
            <div className="row ">
              <div className="col-12 ">
                {loading ? (
                  <div className="text-center mt-5">
                    <CircularProgress />
                  </div>
                ) : (
                  <Questioner data={caseData} />
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
