"use client";

import React, { useState } from "react";
// import { Metadata } from "next";
import "../../expert/expert.css";
import down from "@/assets/down.png";
import Image from "next/image";
import { Button } from "@/components/Form/Button";
import ReportFile from "./_ReportFile";
import { Link } from "@mui/material";
import { useRouter } from "next/navigation";
import LoadingButton from "@mui/lab/LoadingButton";
import { axios } from "@/utils/axios";
// import axios from "axios";

// export const metadata: Metadata = {
//   title: "Claim Evaluation Report",
//   description: "Generated by create next app",
// };
interface ClaimEvalReportProps {
  data: {
    [key: string]: any;
    isFinancialReport?: boolean;
  };
  role: string;
}
const ClaimEvalReport: React.FC<ClaimEvalReportProps> = ({
  role,
  data,
}: {
  role: any;
  data: any;
}) => {
  const router = useRouter();
  const report = data?.data;
  const [load, setLoad] = useState<boolean>(false);
  const generatePdf = async () => {
    try {
      setLoad(true);
      const data: string = await axios.get(`/api/report-pdf?id=${report._id}`);
      window.open(data, "_blank");
    } catch (e: any) {
      console.log(e);
      setLoad(false);
    } finally {
      setLoad(false);
    }
  };

  return (
    <div className="main-content expert-cases case-updates">
      <div className="top-br d-flex justify-content-between align-items-center">
        <h2 className="f-24 pb-3">Claim Evaluation Report</h2>
        {/* <Button variant="contained" className="expert-btn">
          Purchase Report
        </Button> */}
      </div>
      <div className="white-card p-4 evaluation-report mt-4">
        <div className="evaluation-header bggray rounded-radius p-3 d-flex justify-content-between align-items-center">
          <h3 className="semi-bold f-16 mb-0">Claim Evaluation Report</h3>
          {role == "client" &&
            report?.status == "reject" &&
            report?.isPurchased && (
              <LoadingButton
                loading={load}
                variant="contained"
                size="large"
                onClick={generatePdf}
              >
                {load ? (
                  <span>....</span>
                ) : (
                  <span>
                    <Image src={down} className="down-link" style={{filter: "brightness(0) invert(1)"}} alt="Download" />
                  </span>
                )}
              </LoadingButton>

              // <span className="cursor" >
              //   <Link target="_blank">
              //     <Image src={down} className="down-link" alt="" />
              //   </Link>
              // </span>
            )}
        </div>
        <ReportFile role={role} data={data?.data} />
      </div>
    </div>
  );
};
export default ClaimEvalReport;
