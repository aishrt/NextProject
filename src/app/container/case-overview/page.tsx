"use client";

import React, { useState, useEffect } from "react";
import { Metadata } from "next";
import "../../client/client.css";
import { Button } from "@/components/Form/Button";
import { CaseDetails } from "./_CaseComponents/CaseDetails";
import { FinancingStatus } from "./_CaseComponents/FinancingStatus";
import { DocTracking } from "./_CaseComponents/DocTracking";
import { DocRequest } from "./_CaseComponents/DocRequest";
import { CircularProgress, Link } from "@mui/material";
import { DocRequestTrack } from "./_CaseComponents/DocRequestTrack";
import { CaseNotifications } from "./_CaseComponents/CaseNotifications";
import { Questioner } from "./_CaseComponents/Questioner";
import arrow from "@/assets/arrow-lg.png";
import mesasge from "@/assets/mail.png";
import task from "@/assets/task.png";
import call from "@/assets/talk.png";
import Image from "next/image";
import { TbPointFilled } from "react-icons/tb";

import pattern from "@/assets/pattrn.png";
import { useSearchParams, useRouter } from "next/navigation";
import axios from "axios";
import { Cases } from "@/types/Cases";
import LoadingButton from "@mui/lab/LoadingButton";
import { useSession } from "next-auth/react";
import moment from "moment";
import { axios as Axios } from "@/utils/axios";
import { useNotifications } from "@/queries/notifications";
import {
  Checkbox,
  Dialog,
  DialogContent,
  DialogTitle,
  FormControlLabel,
  IconButton,
  useMediaQuery,
  useTheme,
  Alert,
  Snackbar,
} from "@mui/material";
import claim from "@/assets/claim1.png";

// export const metadata: Metadata = {
//   title: "PreLitigation Cases",
//   description: "Generated by create next app",
// };

export default function CaseOverview({ role }: { role: string }) {
  const { data } = useSession();
  const session: any = data?.user;
  let params = useSearchParams();
  const router = useRouter();
  const id = params && params.get("id");
  const [loading, setLoading] = useState<boolean>(false);
  const [filter, setFilter] = useState({ type: "all" });
  const [quitenseDetails, setQuitenseDetails]: any = useState({});
  const [show, setShow] = React.useState(false);
  const theme = useTheme();
  const fullScreen = useMediaQuery(theme.breakpoints.down("md"));
  const handleHide = () => {
    setShow(false);
  };
  const [load, setLoad] = useState<boolean>(false);
  const [ExpertDetails, setExpert]: any = useState({});
  const [caseData, setCaseData] = useState<Cases>();
  const [documents, setDocuments] = useState([]);
  const [Reports, setReports] = useState({ evaluation: "", financial: "" });
  const [DocsLoader, setDocsLoader] = useState(false);
  const [litigationCompleteDetails, setLitigationDetails]: any = useState({});
  const getQuistenseDetail = (id: any) => {
    axios.get(`/api/quitense?case_id=${id}`).then((res: any) => {
      if (res?.data?.data?.success) {
        setQuitenseDetails(res?.data?.data?.data);
      }
    });
  };
  const getLitigationCompleteDetail = (id: any) => {
    axios.get(`/api/litigation-complete?case_id=${id}`).then((res: any) => {
      if (res?.data?.data?.success) {
        setLitigationDetails(res?.data?.data?.data);
      }
    });
  };
  const {
    data: notificationData,
    isLoading,
    isFetching,
    refetch,
  } = useNotifications();
  const GetUnseenCount = () => {
    axios.post("/api/chat/unseen", { case_id: id }).then((res: any) => {});
  };
  const unreadNotifications =
    notificationData?.data?.filter((i: any) => i.caseId?._id == id) ?? [];

  const GetDocuments = (type: any) => {
    setDocsLoader(true);
    setFilter({ ...filter, type: type });
    axios.get(`/api/cases/${id}/documents?type=${type}`).then((res: any) => {
      setDocsLoader(false);
      setDocuments(res?.data?.data?.data);
    });
  };
  const GetEvalReport = () => {
    axios.get(`/api/cer-report/detail?case_id=${id}`).then((res: any) => {
      setReports({ ...Reports, evaluation: res?.data?.data?.data });
    });
  };

  const GetexpertDetails = () => {
    axios
      .get("/api/expert/get")
      .then((res: any) => {
        if (res.data?.success) {
          setExpert(res?.data?.data);
        }
      })
      .catch((error) => {
        console.log(error);
      });
  };
  useEffect(() => {
    if (id) {
      GetEvalReport();
      GetUnseenCount();
      GetexpertDetails();
      getCaseById();
      GetDocuments("all");
      refetch();
    }
  }, [id]);

  const getCaseById = async () => {
    try {
      // setLoading(true);
      if (id) {
        const { data } = await axios.get(
          `/api/client/case/get-case?caseId=${id}`
        );

        setCaseData(data?.data);
        if (data?.data?.isWon && data?.data?.caseType != "litigation") {
          getQuistenseDetail(data?.data?._id);
        }
        if (data?.data?.isWon && data?.data?.caseType == "litigation") {
          getLitigationCompleteDetail(data?.data?._id);
        }
      }

      // setLoading(false);
    } catch (error) {
      console.log("err", error);
      // setLoading(false);
    }
  };

  const GetUpdatesCheck = () => {
    if (role == "lawyer") return true;
    if (role == "client") return true;
    return false;
  };

  const QuitenseCheck = () => {
    return false;
    if (quitenseDetails?.document) {
      return true;
    }
    if (role == "lawyer" && quitenseDetails?.step > 2) {
      return true;
    }
    if (role == "expert" && quitenseDetails?.step == 1) {
      return true;
    }
    if (role == "client" && quitenseDetails?.step == 1) {
      return false;
    }
    if (role == "client" && quitenseDetails?.step == 2) {
      return true;
    }
    if (role == "client" && quitenseDetails?.step == 3) {
      return false;
    }
    // if (role == "client" && quitenseDetails?.step > 2) {
    //   return true;
    // }
    if (role == "expert" && quitenseDetails?.step == 1) {
      return true;
    }
    if (role == "expert" && quitenseDetails?.step == 5) {
      return true;
    }
    if (role == "expert" && quitenseDetails?.step == 3) {
      return false;
    }
    if (role == "lawyer" && quitenseDetails?.step == 3) {
      return true;
    }

    if (role == "client" && !quitenseDetails?.step) {
      return true;
    }
    // if(role=='expert' && quitenseDetails?.step==)
    return false;
  };

  const LitigationCheck = () => {
    return false;

    if (litigationCompleteDetails?.carpaDocument) {
      return true;
    }
    if (role == "expert" && litigationCompleteDetails?.step == 1) {
      return true;
    }
    if (role == "lawyer" && !litigationCompleteDetails?.step) {
      return true;
    }
    if (role == "lawyer" && litigationCompleteDetails?.step == 1) {
      return false;
    }
    if (role == "client" && litigationCompleteDetails?.step == 1) {
      return false;
    }
    if (role == "client" && litigationCompleteDetails?.step == 2) {
      return true;
    }
    if (role == "lawyer" && litigationCompleteDetails?.step == 3) {
      return true;
    }
    // if (role == "client" && litigationCompleteDetails?.step > 2) {
    //   return true;
    // }
    if (role == "expert" && litigationCompleteDetails?.step == 4) {
      return true;
    }
    if (role == "expert" && litigationCompleteDetails?.step == 5) {
      return true;
    }
    if (role == "expert" && litigationCompleteDetails?.step == 3) {
      return false;
    }
    if (role == "lawyer" && litigationCompleteDetails?.step == 3) {
      return true;
    }

    if (role == "client" && !litigationCompleteDetails?.step) {
      return false;
    }
    // if(role=='expert' && litigationCompleteDetails?.step==)
    return false;
  };

  return (
    <div className="main-content expert-cases details-litigation">
      <div className="top-br d-flex justify-content-between align-items-center">
        <h2 className="f-24">Case ID: #{caseData?.referenceId}</h2>
        <div>
          <LoadingButton
            loading={load}
            variant="contained"
            className="client-btn f-14 rounded-lg"
            size="large"
            onClick={() => {
              setLoad(true);
              router.back();
            }}
          >
            <span>Go Back</span>
          </LoadingButton>
          {caseData?.isWon &&
            caseData?.caseType != "litigation" &&
            QuitenseCheck() && (
              <button
                onClick={() => {
                  router.push(`/${role}/quitense?case_id=${caseData?._id}`);
                }}
                style={{ marginLeft: "5px" }}
                className="btn btn-primary ml-3"
              >
                Final Step
              </button>
            )}
          {caseData?.isWon &&
            caseData?.caseType == "litigation" &&
            LitigationCheck() && (
              <button
                onClick={() => {
                  router.push(
                    `/${role}/litigation-case-complete?case_id=${caseData?._id}`
                  );
                }}
                style={{ marginLeft: "5px" }}
                className="btn btn-primary ml-3"
              >
                Final Step
              </button>
            )}
        </div>
      </div>
      {isLoading || isFetching ? (
        <p className="text-center my-5">
          <CircularProgress />
        </p>
      ) : (
        <>
          <div className="pre-case-overview row ">
            <div className="col-12 col-md-8 mt-4">
              <div className="white-card rounded-lg p-4">
                <div className="row ">
                  <div className="col-12 col-md-6">
                    <CaseDetails data={caseData} />
                  </div>
                  <div className="col-12 col-md-6">
                    <div className="case-direct">
                      <h3 className="f-18 semi-bold pb-3">Case Directory</h3>
                      <div className="bggray rounded-lg f-14 px-4 py-3 my-2">
                        <span>Case Manager Person ID : </span>{" "}
                        <span className="semi-bold">
                          {ExpertDetails?.firstName}
                        </span>
                      </div>
                      <div className="bggray  rounded-lg  f-14 px-4 py-3 my-2">
                        <span>Lawyer Person ID : </span>{" "}
                        <span className="semi-bold red">
                          {caseData?.isLaywerAssigned
                            ? caseData?.lawyer?.name
                            : "Not Assigned"}
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
                <div className="direct-btns pt-3">
                  <div className="view-gray-btns f-14 flex-wrap d-flex gap-2 justify-content-center py-4 align-items-center">
                    <Link
                      href={`/${role}/case-detail?id=${id}`}
                      className="view-dc-gray bggray rounded-lg px-4 py-3"
                    >
                      Case Details
                    </Link>
                    <Link
                      href={
                        role == "lawyer"
                          ? "#"
                          : `/${role}/claim-documents?id=${id}`
                      }
                      className="view-dc-gray bggray rounded-lg px-4 py-3"
                    >
                      Claim Documents
                    </Link>
                    <Link
                      href={`/${role}/case-members/${id}`}
                      className="view-dc-gray bggray rounded-lg px-4 py-3"
                    >
                      Case Members
                    </Link>
                    <Link
                      href={
                        role == "lawyer"
                          ? "#"
                          : `/${role}/legal-documents?id=${id}`
                      }
                      className="view-dc-gray bggray rounded-lg px-4 py-3"
                    >
                      Legal Documents
                    </Link>
                    <Link
                      href={`/${role}/chat?case_id=${caseData?._id}&referenceId=${caseData?.referenceId}`}
                      className="view-dc-gray bggray rounded-lg px-4 py-3"
                    >
                      Message
                      <TbPointFilled />
                    </Link>
                    {caseData?.status == "active" && (
                      <Link
                        href={`/${role}/court-hearing?id=${caseData?._id}`}
                        className="view-dc-gray bggray rounded-lg px-4 py-3"
                      >
                        Court Hearing
                      </Link>
                    )}
                  </div>
                </div>
              </div>
            </div>
            <div className="white-card col-12 col-md-4 mt-4">
              <div className="headr-pre p-3 border-btm">
                <h3 className="f-18 semi-bold mb-0">Notifications </h3>
              </div>
              {unreadNotifications?.length == 0 ? (
                <p className="text-center semi-bold mt-5 gray ">
                  No notifications found
                </p>
              ) : (
                <CaseNotifications
                  caseId={id}
                  data={unreadNotifications}
                  role={role}
                />
              )}
            </div>
          </div>
          <div className="liti-minor-boxs row">
            <div className="col-12 mt-4">
              <FinancingStatus report={Reports} user={data} data={caseData} />
            </div>
          </div>
          <div className="liti-minor-boxs row">
            <div className="col-12 col-md-8 mt-4">
              <DocTracking data={caseData} />
              <Questioner role={session?.role ?? ""} data={caseData} />
            </div>
            <div className="col-12 col-md-4 mt-4">
              {role !== "lawyer" && caseData?.isEvalReport && (
                <div
                  className="case-evreport-info mb-5"
                  onClick={() => {
                    if (caseData?.isEvalReport) {
                      router.push(`/${role}/eval-report?id=${caseData?._id}`);
                    }
                  }}
                >
                  <div className="white-card d-flex justify-content-between rounded-lg p-4">
                    <h3 className="f-32 bold">
                      View Evaluation Report{" "}
                      <Image src={arrow} className="arrow-large" alt="" />{" "}
                    </h3>
                    <div className="text-end mt-4">
                      <Image src={mesasge} className="view-evicon" alt="" />
                    </div>
                  </div>
                </div>
              )}

              {role == "client" &&
                caseData?.caseType == "preLitigation" &&
                caseData?.status !== "reject" && (
                  <div
                    className="case-evreport-info mb-5 cursor"
                    onClick={async () => {
                      const data = await axios.post(
                        "/api/client/case/add-case",
                        {
                          applyFor: "litigation",
                          caseType: "litigation",
                          caseId: id,
                        }
                      );
                      if (data?.status == 200) {
                        setShow(true);
                      }
                    }}
                  >
                    <div className="white-card d-flex justify-content-between rounded-lg p-4">
                      <h3 className="f-32 bold">
                        Apply For Litigation
                        <Image
                          src={arrow}
                          className="arrow-large"
                          alt=""
                        />{" "}
                      </h3>
                      <div className="text-end mt-4">
                        <Image src={mesasge} className="view-evicon" alt="" />
                      </div>
                    </div>
                  </div>
                )}

              {session?.role == "expert" && (
                <>
                  <div className="white-card assign-card-t p-4 rounded-lg">
                    <div
                      className="task-assign  rounded-lg p-3"
                      style={{ background: "#AAD6CC" }}
                    >
                      <div className="row align-items-center">
                        <div className="col-12 col-md-6">
                          <div className="assignment-icon">
                            <Image
                              src={task}
                              className="assign-taks object-contain w-100"
                              alt=""
                            />
                          </div>
                        </div>
                        <div className="col-12 col-md-6">
                          <div className="assign-btn text-center">
                            <Button className="expert-btn" variant="contained">
                              Assign
                            </Button>
                          </div>
                        </div>
                      </div>
                      <h3 className="f-26 bold text-center mt-4">
                        Assign Task to Client
                      </h3>
                    </div>
                  </div>
                  <div className="case-evreport-send white-card mt-4 p-4 rounded-lg mb-4">
                    <div className="schedule-client">
                      <div className="d-flex justify-content-between rounded-lg p-4">
                        <h3 className="f-32 bold">
                          Schedule Client Call{" "}
                          <span className="bgcall rounded-radius">Now</span>
                        </h3>
                        <div className="text-end mt-4">
                          <Image src={call} className="view-call" alt="" />
                        </div>
                      </div>
                    </div>
                  </div>
                </>
              )}
            </div>
          </div>

          <div className="comm-tools req-tracking mt-4">
            <h3 className="f-18 semi-bold">Document Request Tracking</h3>
            <div className="res-tabs pt-4">
              <div className="res-tabs-box d-flex gap-3 align-items-center mb-4">
                <ul className="nav nav-tabs" id="myTab" role="tablist">
                  <li className="nav-item " role="presentation">
                    <button
                      className={`nav-link ${
                        filter?.type == "legal" ? "active" : ""
                      }`}
                      id="manager-tab"
                      data-bs-toggle="tab"
                      onClick={() => {
                        GetDocuments("legal");
                      }}
                      data-bs-target="#manager"
                      type="button"
                      role="tab"
                      aria-controls="manager"
                      aria-selected="false"
                    >
                      Case Manager{" "}
                    </button>
                  </li>
                  <li
                    className="nav-item"
                    style={{ marginLeft: "5px" }}
                    role="presentation"
                  >
                    <button
                      className={`nav-link ${
                        filter?.type == "all" ? "active" : ""
                      }`}
                      onClick={() => {
                        GetDocuments("all");
                      }}
                      id="manager-tab"
                      data-bs-toggle="tab"
                      data-bs-target="#manager"
                      type="button"
                      role="tab"
                      aria-controls="manager"
                      aria-selected="false"
                    >
                      On Behalf of other
                    </button>
                  </li>
                </ul>
              </div>
              <div className="tab-content" id="myTabContent">
                <div
                  className="tab-pane fade show active"
                  id="manager"
                  role="tabpanel"
                  aria-labelledby="manager-tab"
                >
                  <div className="doc-requets">
                    <div className="row">
                      {DocsLoader ? (
                        <>
                          <div
                            style={{ width: "40%" }}
                            className="card"
                            aria-hidden="true"
                          >
                            <div className="card-body">
                              <h5 className="card-title placeholder-glow">
                                <span className="placeholder col-6"></span>
                              </h5>
                              <p className="card-text placeholder-glow">
                                <span className="placeholder col-7"></span>
                                <span className="placeholder col-4"></span>
                                <span className="placeholder col-4"></span>
                                <span className="placeholder col-6"></span>
                                <span className="placeholder col-8"></span>
                              </p>
                              <a className="btn btn-primary disabled placeholder col-6"></a>
                            </div>
                          </div>
                          <div
                            style={{ width: "40%", marginLeft: "5px" }}
                            className="card"
                            aria-hidden="true"
                          >
                            <div className="card-body">
                              <h5 className="card-title placeholder-glow">
                                <span className="placeholder col-6"></span>
                              </h5>
                              <p className="card-text placeholder-glow">
                                <span className="placeholder col-7"></span>
                                <span className="placeholder col-4"></span>
                                <span className="placeholder col-4"></span>
                                <span className="placeholder col-6"></span>
                                <span className="placeholder col-8"></span>
                              </p>
                              <a className="btn btn-primary disabled placeholder col-6"></a>
                            </div>
                          </div>
                        </>
                      ) : (
                        <>
                          {documents?.map((itm: any, i: any) => {
                            return (
                              <div key={i} className="col-12 col-md-6">
                                <DocRequest data={itm} />
                              </div>
                            );
                          })}
                        </>
                      )}

                      {/* <div className="col-12 col-md-6">
                    <DocRequest />
                  </div> */}
                    </div>
                    <div className="row">
                      <div className="col-12 col-md-6 mt-4">
                        {/* <div className="doc-flex d-flex justify-content-between align-items-center">
                      <h3 className="f-18 semi-bold mb-4">
                        Document Request Tracking
                      </h3>
                      <Link href="/" className="dark f-15">
                        View All
                      </Link>
                    </div>
                    <DocRequestTrack /> */}
                      </div>
                      <div className="col-12 col-md-6 mt-4">
                        <h3 className="f-18 semi-bold mb-4">
                          Communication Tools
                        </h3>
                        <div className="communit-buttons d-flex gap-3 mt-4 flex-wrap">
                          <Button variant="contained" className="client-btn">
                            New Message
                          </Button>
                          {GetUpdatesCheck() &&
                            caseData?._id &&
                            session?.role && (
                              <>
                                <Button
                                  variant="contained"
                                  className="client-btn"
                                  onClick={() => {
                                    if (session?.role == "expert") return false;
                                    if (session?.role == "admin") return false;

                                    // if (session?.role == "lawyer") {
                                    router.push(
                                      `/${session?.role}/case-updates?case_id=${caseData?._id}`
                                    );
                                    // }
                                  }}
                                >
                                  Updates
                                </Button>
                              </>
                            )}
                          <Button variant="contained" className="client-btn">
                            Upload file
                          </Button>
                          <Button variant="contained" className="client-btn">
                            Schedule Meeting
                          </Button>
                          <Button variant="contained" className="client-btn">
                            Notifications
                          </Button>
                          <Button variant="contained" className="client-btn">
                            FAQ’s
                          </Button>
                          <Button variant="contained" className="client-btn">
                            Setting
                          </Button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                {/* <div
              className="tab-pane fade show active"
              id="other"
              role="tabpanel"
              aria-labelledby="other-tab"
            >
              <div className="doc-requets">
                <div className="row">
                  <div className="col-12 col-md-6">
                    <DocRequest />
                  </div>
                  <div className="col-12 col-md-6">
                    <DocRequest />
                  </div>
                </div>
                <div className="row">
                  <div className="col-12 col-md-6 mt-4">
                    <div className="doc-flex d-flex justify-content-between align-items-center">
                      <h3 className="f-18 semi-bold mb-4">
                        Document Request Tracking
                      </h3>
                      <Link href="/" className="dark f-15">
                        View All
                      </Link>
                    </div>
                    <DocRequestTrack />
                  </div>
                </div>
              </div>
            </div> */}
              </div>
            </div>
          </div>
        </>
      )}

      <Dialog
        fullScreen={fullScreen}
        open={show}
        // onClose={handleHide}
        className="assgn-succes-modal"
        aria-labelledby="responsive-dialog-title"
      >
        <DialogTitle id="responsive-dialog-title">
          <IconButton
            aria-label="close"
            onClick={handleHide}
            sx={(theme) => ({
              position: "absolute",
              right: 8,
              top: 8,
              color: theme.palette.grey[500],
            })}
          >
            {/* <CloseIcon /> */}
          </IconButton>
        </DialogTitle>
        <DialogContent>
          <div className="assign-lawyer-success text-center">
            <div className="">
              <Image src={claim} className="assign-trf-sucess" alt="image" />
              <div className="assign-law-cnt mt-4">
                <h4 className="f-24 semi-bold">Congratulations!</h4>
                <p className="f-16 gray semi-bold">
                  Your claim is registered for litigation
                </p>
              </div>
              <div className="text-center mt-4 pb-4">
                <Button
                  variant="contained"
                  className="expert-btn px-5"
                  onClick={() => {
                    setShow(false);
                    router.push(`/client/cases-list?type=litigation`);
                  }}
                >
                  Next
                </Button>
              </div>
            </div>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  );
}
